---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: frigate
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  timeout: 60m
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: nvidia-gpu-operator
      namespace: kube-system
    - name: mosquitto
      namespace: home
    - name: longhorn
      namespace: storage
    - name: deepstack
      namespace: ai
  values:
    defaultPodOptions:
      runtimeClassName: nvidia
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/blakeblackshear/frigate
              tag: stable-tensorrt@sha256:2068baac8d8b9a29a97483d0ab603b024fe606ec7d555b70da5a024fbeab12e3
              # tag: stable
            env:
              TZ: Europe/Simferopol
              # LIBVA_DRIVER_NAME: radeonsi
            envFrom:
              - secretRef:
                  name: frigate-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/version
                    port: &port 5000
                  initialDelaySeconds: 2500
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              privileged: true
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 8Gi
                nvidia.com/gpu: 1
        # pod:
        #   affinity:
        #     podAntiAffinity:
        #       requiredDuringSchedulingIgnoredDuringExecution:
        #         - labelSelector:
        #             matchExpressions:
        #               - key: app.kubernetes.io/name
        #                 operator: In
        #                 values: ["plex"]
        #           topologyKey: kubernetes.io/hostname
          # nodeSelector:
          #   google.feature.node.kubernetes.io/coral: "true"
          #   intel.feature.node.kubernetes.io/gpu: "true"
    service:
      main:
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: 192.168.108.55
        ports:
          http:
            port: *port
          rtsp:
            port: 8554
          webrtc:
            port: 8555
    ingress:
      main:
        enabled: true
        className: internal
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: frigate
        globalMounts:
          - path: /data
      config-file:
        type: configMap
        name: frigate-configmap
        globalMounts:
          - path: /config/config.yml
            subPath: config.yml
            readOnly: false
      modelcache:
        enabled: true
        existingClaim: frigate-model-cache
        globalMounts:
          - path: /config/model_cache
      cache:
        enabled: true
        type: emptyDir
        medium: Memory
        sizeLimit: 4Gi
        globalMounts:
          - path: /dev/shm
      # usb:
      #   enabled: true
      #   type: hostPath
      #   hostPath: /dev/bus/usb
      #   hostPathType: Directory
      #   globalMounts:
      #     - path: /dev/bus/usb
      # dri:
      #   enabled: true
      #   type: hostPath
      #   hostPath: /dev/dri
      #   hostPathType: Directory
      #   globalMounts:
      #     - path: /dev/dri
      suv:
        existingClaim: suv-storage
        globalMounts:
          - path: /media
