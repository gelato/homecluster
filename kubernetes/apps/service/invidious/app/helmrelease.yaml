---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app invidious-server
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/auricom/postgres-init
              tag: 15.6@sha256:e5dfcf4d53d4dfe3bf996ba02fec5145e0c4f0a3d5f14a0f529e1f8830157d20
              pullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: invidious-secret
        containers:
          main:
            image:
              repository: quay.io/invidious/invidious
              tag: latest@sha256:8ea514c132b6a805328891f99b7aeef201523ff7ba28e38fd3c01ec4e14498da
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    # Consider path /feed/trending
                    path: &path /preferences
                    port: &port 3000
                  initialDelaySeconds: 0
                  periodSeconds: 30
                  timeoutSeconds: 5
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 50m
                memory: 256Mi
    service:
      main:
        controller: main
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        className: internal
        annotations:
          hajimari.io/icon: mdi:youtube
          gatus.io/enable: "true"
          gatus.io/path: *path
          nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16"
        hosts:
          - host: &host-release "yt.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - *host-release