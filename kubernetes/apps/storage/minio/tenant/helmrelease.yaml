---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: minio-tenant
spec:
  interval: 1h
  maxHistory: 3
  dependsOn:
    - name: minio-operator
      namespace: storage
  chart:
    spec:
      chart: tenant
      version: 5.0.11
      sourceRef:
        kind: HelmRepository
        name: minio-operator-charts
        namespace: flux-system
  install:
    createNamespace: true
    crds: Create
    replace: true
  upgrade:
    cleanupOnFail: true
    crds: CreateReplace
  uninstall:
    keepHistory: false
  values:
    # for testing
    secrets:
      accessKey: ${MINIO_ROOT_USER}
      secretKey: ${MINIO_ROOT_PASSWORD}
    tenant:
      name: s3
      env:
        - name: MINIO_PROMETHEUS_URL
          value: "http://kube-prometheus-stack-prometheus.monitoring:9090"
        - name: MINIO_SERVER_URL
          value: "https://s3.${SECRET_DOMAIN}"
      buckets:
        - name: loki-chunks
        - name: loki-ruler
        - name: loki-admin
        - name: cloudnative-pg
      pools:
        - name: pool
          servers: 1
          volumesPerServer: 1
          size: 200Gi
          storageClassName: longhorn-storage
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: "OnRootMismatch"
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          containerSecurityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      certificate:
        requestAutoCert: true
      prometheusOperator: true
      metrics:
        enabled: true
      features:
        bucketDNS: true
        domains:
          minio:
            - &apiHost "s3.${SECRET_DOMAIN}"
          console: &consoleHost minio.${SECRET_DOMAIN}
        enableSFTP: false
    ingress:
      api:
        enabled: true
        ingressClassName: "internal"
        labels: { }
        annotations:
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/rewrite-target: /
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
          nginx.ingress.kubernetes.io/server-snippet: |
            client_max_body_size 0;
          nginx.ingress.kubernetes.io/configuration-snippet: |
            chunked_transfer_encoding off;
        tls:
          - hosts:
            - "*.s3.${SECRET_DOMAIN}"
            secretName: minio-api-tls
        host: '*.s3.${SECRET_DOMAIN}'
        path: /
        pathType: Prefix
      console:
        enabled: true
        ingressClassName: "internal"
        labels: { }
        annotations:
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/rewrite-target: /
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
          nginx.ingress.kubernetes.io/server-snippet: |
            client_max_body_size 0;
          nginx.ingress.kubernetes.io/configuration-snippet: |
            chunked_transfer_encoding off;
        tls:
          - hosts:
            - *consoleHost
            secretName: minio-console-tls
        host: *consoleHost
        path: /
        pathType: Prefix
