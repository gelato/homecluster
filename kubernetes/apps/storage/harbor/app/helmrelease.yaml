---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: harbor
  namespace: storage
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: harbor
      version: 1.14.2
      sourceRef:
        kind: HelmRepository
        name: harbor
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    logLevel: debug
    externalURL: "https://hcr.${SECRET_DOMAIN}"
    existingSecretAdminPassword: &secret harbor-secret
    imagePullPolicy: IfNotPresent
    updateStrategy:
      type: Recreate
    containerSecurityContext:
      privileged: false
      allowPrivilegeEscalation: false
      seccompProfile:
        type: RuntimeDefault
      runAsNonRoot: true
      capabilities:
        drop:
          - ALL
    expose:
      type: ingress
      ingress:
        controller: default
        className: internal
        hosts:
          core: harbor.${SECRET_DOMAIN}
        annotations:
          ingress.kubernetes.io/ssl-redirect: "true"
          ingress.kubernetes.io/proxy-body-size: "0"
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
          nginx.ingress.kubernetes.io/custom-http-errors: "418"
          nginx.ingress.kubernetes.io/proxy-connect-timeout: "480"
      tls:
        enabled: true
        certSource: none
    persistence:
      enabled: true
      persistentVolumeClaim:
        registry:
          existingClaim: "harbor-registry"
        chartmuseum:
          existingClaim: "harbor-chartmuseum"
        jobservice:
          jobLog:
            existingClaim: "harbor-jobservice"
          scanDataExports:
            existingClaim: "harbor-jobservice-scandata"
        trivy:
          existingClaim: "harbor-trivy"
    database:
      type: external
      external:
        host: postgres16-rw.database.svc.cluster.local
        port: "5432"
        username: harborpg
        coreDatabase: harbor
        existingSecret: *secret
        sslmode: "disable"
    redis:
      type: external
      external:
        sentinelMasterSet: ""
        addr: "redis-headless.database.svc.cluster.local:6379"
        coreDatabaseIndex: "69"
        jobserviceDatabaseIndex: "68"
        registryDatabaseIndex: "67"
        trivyAdapterIndex: "66"
        harborDatabaseIndex: "65"
        cacheLayerDatabaseIndex: "64"
        username: ""
        password: ""
    core:
      replicas: 1
      revisionHistoryLimit: 10
      startupProbe:
        enabled: true
        initialDelaySeconds: 10
      resources:
       requests:
         memory: 256Mi
         cpu: 100m
    jobservice:
      replicas: 1
      revisionHistoryLimit: 10
      resources:
        requests:
          memory: 256Mi
          cpu: 100m
      maxJobWorkers: 10
      jobLoggers:
        - database
      loggerSweeperDuration: 14
      notification:
        webhook_job_max_retry: 3
        webhook_job_http_client_timeout: 3
      reaper:
        max_update_hours: 24
        max_dangling_hours: 168
    registry:
      registry:
        resources:
          requests:
            memory: 256Mi
            cpu: 100m
      controller:
        resources:
         requests:
           memory: 256Mi
           cpu: 100m
      replicas: 1
      revisionHistoryLimit: 10
      relativeurls: true
      credentials:
        # If using existingSecret, the key must be REGISTRY_PASSWD and REGISTRY_HTPASSWD
        existingSecret: "harbor-secret"
      upload_purging:
        enabled: true
        age: 168h
        # the interval of the purge operations
        interval: 24h
        dryrun: false
    notary:
      enabled: false
    trivy:
      enabled: true
      replicas: 1
      resources:
        requests:
          cpu: 200m
          memory: 512Mi
        limits:
          cpu: 1
          memory: 1Gi
      vulnType: "os,library"
      severity: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL"
      ignoreUnfixed: false
      insecure: true
      skipUpdate: false
      skipJavaDBUpdate: false
      offlineScan: false
      securityCheck: "vuln"
      timeout: 5m0s
    exporter:
      replicas: 1
      revisionHistoryLimit: 10
      resources:
       requests:
         memory: 256Mi
         cpu: 100m
      cacheDuration: 23
      cacheCleanInterval: 14400
    metrics:
      enabled: true
      core:
        path: /metrics
        port: 8001
      registry:
        path: /metrics
        port: 8001
      jobservice:
        path: /metrics
        port: 8001
      exporter:
        path: /metrics
        port: 8001
    serviceMonitor:
      enabled: true
