---
apiVersion: v1
kind: Secret
metadata:
  name: alertmanager-secret
  namespace: cattle-monitoring-system
type: Opaque
stringData:
  alertmanager.yaml: |
    route:
    groupBy: ["alertname", "job"]
    groupInterval: 5m
    groupWait: 30s
    receiver: "pushover"
    repeatInterval: 5m
    routes:
      - receiver: "null"
        matchers:
          [
            {
              name: alertname,
              value: InfoInhibitor|Watchdog,
              matchType: =~
            }
          ]
      - receiver: pushover
        matchers: [{name: severity, value: critical|warning, matchType: =~}]
        continue: true
    receivers:
      - name: "null"
      - name: pushover
        pushover_configs:
          - html: true
            token: ${ALERTMANAGER_API_TOKEN}
            user_key: ${PUSHOVER_USER_KEY}
            send_resolved: true
            priority: |-
              {{ if eq .Status "firing" }}1{{ else }}0{{ end }}
            url_title: View in Alert Manager
            title: >-
              {{ .GroupLabels.alertname }} - {{ .GroupLabels.namespace }}
              {{- if ne .CommonLabels.severity "" }} ({{ .CommonLabels.severity}}){{- end }}
              ({{ .GroupLabels.cluster }})
              [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}]
            message: |-
              {{- $root := . }}
              {{- $rm := stringSlice "instance" "kubernetes_node" "endpoint" "prometheus" "service" "cluster" "container" "job" "severity" }}
              {{- $common := ( ( .CommonLabels.Remove $root.GroupLabels.Names ).Remove $rm ) }}
              {{- if gt (len $common.SortedPairs) 0 }}
              ## Common Labels
              {{- range $common.SortedPairs }}
              > {{ .Name }}: `{{ .Value }}`
              {{- end }}
              {{- end }}
              ## Alerts
              {{- range .Alerts }}
                {{- if ne .Annotations.description "" }}
              - **{{ .Annotations.description }}** [{{ .Fingerprint }}]({{ .GeneratorURL }})
                {{- else if ne .Annotations.summary "" }}
              - **{{ .Annotations.summary }}** [{{ .Fingerprint }}]({{ .GeneratorURL }})
                {{- else if ne .Annotations.message "" }}
              - **{{ .Annotations.message }}** [{{ .Fingerprint }}]({{ .GeneratorURL }})
                {{- else }}
              - **Alert description not available** [{{ .Fingerprint }}]({{ .GeneratorURL }})
                {{- end }}
                {{- $uniq := ( ( .Labels.Remove $root.GroupLabels.Names ).Remove $root.CommonLabels.Names ) }}
                {{- if gt (len $uniq.SortedPairs) 0 }}
                  {{- range $uniq.SortedPairs }}
              > {{ .Name }}: `{{ .Value }}`
                  {{- end }}
                {{- end }}
              {{- end }}
    inhibitRules:
      - sourceMatch: [{name: severity, value: critical, matchType: =}]
        targetMatch: [{name: severity, value: warning|info, matchType: =~}]
        equal: ["namespace", "alertname"]
      - sourceMatch: [{name: severity, value: warning, matchType: =}]
        targetMatch: [{name: severity, value: info, matchType: =}]
        equal: ["namespace", "alertname"]
      - sourceMatch: [{name: alertname, value: InfoInhibitor, matchType: =}]
        targetMatch: [{name: severity, value: info, matchType: =}]
        equal: ["namespace"]
      - targetMatch: [{name: alertname, value: InfoInhibitor, matchType: =}]